#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>
#include <conio.h>

FILE *fp;
FILE *st;
FILE *ib;
FILE *spf;
FILE *spt;
FILE *tpf;
FILE *tpt;

struct student
{
	char id[20];
	char Name[20];
	char course[20];
	char University_id[11];
	char number[11];
} s;

struct book
{
	char id[20];
	char name[30];
	char Author_name[60];
	char page_numbers[30];
	char book_price[30];
} b;

struct studentportal
{
	char newuser[30];
	char newpass[30];
	char user[30];
	char pass[30];
} sp;

struct teacherportal
{
	char newuser[30];
	char newpass[30];
	char user[30];
	char pass[30];
} tp;

char file[255];

void searchbookbyauthor();
void searchbookbyid();
void searchbookbyname();
void addbook();
void removebook();
void addstudent();
void removestudent();
void showbooks();
void issubooklist();
void searchbook();
void issubook();
void studentlist();
void searchstudent();
void searchstudentforissu();
void searchbookforissu();
void tearcherportal();
int studentportal();
void studentlog();
void teacherlog();
void askteacher();
void teachersign();
void studentsign();
void askstudent();

int main()
{
	int op;
	do
	{
		printf("\n\n\t\t\t\t\t< < = = Welcome To Library Management System = = > > \n\n");
		printf("\n\t1. Student Portal PRESS [ 1 ] : ");
		printf("\n\t2. Teacher Portal PRESS [ 2 ] : ");
		printf("\n\tEnter Your Choice --> ");
		scanf("%d", &op);
		switch (op)
		{
		case 1:
			askstudent();
			break;
		case 2:
			askteacher();
			break;
		case 3:
			exit(0);
			break;
		default:
			printf("\n\t\t\t\t\t<== Please Choose Among These option ==>\n\n ");
			getch();
		}
	} while (op == 3);
}
void askteacher()
{
	system("cls");
	int op;
	do
	{
		printf("\n\n\t\t\t\t\t< < = = Welcome To Library Management System = = > > \n\n");
		printf("\n\t1. Sign Up Portal PRESS [ 1 ] : ");
		printf("\n\t2. Log In Portal PRESS [ 2 ] : ");
		printf("\n\t3. EXIT PRESS [ 3 ] : ");
		printf("\n\tEnter Your Choice --> ");
		scanf("%d", &op);
		switch (op)
		{
		case 1:
			teachersign();
			break;
		case 2:
			teacherlog();
			break;
		case 3:
			exit(0);
		default:
			printf("\n\t\t\t\t\t<== Invalid Choice ==>\n\n");
		}
	} while (op > 0);
}
void teachersign()
{
	system("cls");
	int ask;
	char number[11];
	char name[20];
	char email[50];
	tpf = fopen("teacherloginfo.txt", "a+");
	tpt = fopen("teacherlog.txt", "a+");
	printf("\n\t\tEnter Your Username --> ");
	scanf("%s", tp.newuser);
	fputs(tp.newuser, tpt);
	fputs(";", tpt);
	fputs(tp.newuser, tpf);
	fputs("\t\t\t", spf);
	printf("\n\t\tEnter Your Password --> ");
	scanf("%s", tp.newpass);
	fputs(tp.newpass, tpt);
	fputs(tp.newpass, tpf);
	fputs("\t\t\t", tpf);
	fputs("\n", tpt);
	printf("\n\t\tEnter Your Number --> ");
	scanf("%s", &number);
	fputs(number, tpf);
	fputs("\t\t\t", tpf);
	printf("\n\t\tEnter Your Name --> ");
	scanf("%s", &name);
	fputs(name, tpf);
	fputs("\t\t\t", tpf);
	printf("\n\t\tEnter Your E-mail --> ");
	scanf("%s", email);
	fputs(email, tpf);
	fputs("\n", tpf);
	printf("\n\t\tNow you are successfully Signed\n\n\t\t\t\t<== Thanks==>\n\n");
	fclose(tpt);
	fclose(tpf);
	printf("\n\tDo you Want To Log In \n PRESS [ 1 ] --> ");
	scanf("%d", &ask);
	if (ask == 1)
	{
		teacherlog();
	}
	else
	{
		printf("\n\t\t\t\t\t<== Thanks For Using Library Management System ==>\n\n");
	}
}

//...............................................................................Teacher Log .............................................................................................

void teacherlog()
{
	system("cls");
	int found = 0;
	int ask;
	tpt = fopen("teacherlog.txt", "rb");
	printf("\t\tEnter Your Username --> ");
	scanf("%s", &tp.user);
	printf("\n\t\tEnter Your Password --> ");
	scanf("%s", &tp.pass);
	printf("\n\t\tThe Username Is %s And The Password Is %s\n", tp.user, tp.pass);
	if (tpt == NULL)
	{
		printf("\tFile is empty");
	}
	else
	{
		int u = 0;
		int p = 0;
		int c = 0;
		while (fscanf(tpt, "%s", &file) == 1)
		{
			char *fds = strtok(file, ";");
			while (fds != NULL)
			{
				if (c == 0)
				{
					if (strcmp(fds, tp.user) == 0)
					{
						u = 1;
					}
					c++;
				}
				else
				{

					if (strcmp(fds, tp.pass) == 0)
					{
						if (u == 0)
						{
							p = 0;
						}
						else
							p = 1;
					}
					c = 0;
				}
				fds = strtok(NULL, " ");
			}
			if (u == 1 && p == 1)
			{
				found = 1;
				tearcherportal();
				break;
			}
		}
	}
	if (found == 0)
	{
		printf("\n\t\t\t\t\t<== Account Not Found ==> \n\n");
		printf("\n\tDo you Want To Create an Account \n PRESS [ 1 ] --> ");
		scanf("%d", &ask);
		if (ask == 1)
		{
			teachersign();
		}
		else
		{
			printf("\n\t\t\t\t\t<== Thanks For Using Library Management System ==>\n\n");
		}
	}
	fclose(spt);
}

void askstudent()
{
	system("cls");
	int op;
	do
	{
		printf("\n\n\t\t\t\t\t< < = = Welcome To Library Management System = = > > \n\n");
		printf("\n\t1. Sign Up Portal PRESS [ 1 ] : ");
		printf("\n\t2. Log In Portal PRESS [ 2 ] : ");
		printf("\n\t3. EXIT PRESS [ 3 ] : ");
		printf("\n\tEnter Your Choice --> ");
		scanf("%d", &op);
		switch (op)
		{
		case 1:
			studentsign();
			break;
		case 2:
			studentlog();
			break;
		case 3:
			exit(0);
		default:
			printf("\n\t\t\t\t\t<== Invalid Choice ==>\n\n");
		}
	} while (op > 0);
}

void studentsign()
{
	int ask;
	char number[11];
	char name[20];
	char email[50];
	system("cls");
	spf = fopen("Studentloginfo.txt", "a+");
	spt = fopen("studentlog.txt", "a+");
	printf("\n\t\tEnter Your Username --> ");
	scanf("%s", sp.newuser);
	fputs(sp.newuser, spt);
	fputs(";", spt);
	fputs(sp.newuser, spf);
	fputs("\t\t\t", spf);
	printf("\n\t\tEnter Your Password --> ");
	scanf("%s", sp.newpass);
	fputs(sp.newpass, spt);
	fputs(sp.newpass, spf);
	fputs("\t\t\t", spf);
	fputs("\n", spt);
	printf("\n\t\tEnter Your Number --> ");
	scanf("%s", &number);
	fputs(number, spf);
	fputs("\t\t\t", spf);
	printf("\n\t\tEnter Your Name --> ");
	scanf("%s", &name);
	fputs(name, spf);
	fputs("\t\t\t", spf);
	printf("\n\t\tEnter Your E-mail --> ");
	scanf("%s", email);
	fputs(email, spf);
	fputs("\n", spf);
	printf("\n\t\tNow you are successfully Signed\n\n\t\t\t\t<== Thanks==>\n\n");
	fclose(spt);
	fclose(spf);
	printf("\n\tDo you Want To Log In \n PRESS [ 1 ] --> ");
	scanf("%d", &ask);
	if (ask == 1)
	{
		studentlog();
	}
	else
	{
		printf("\n\t\t\t\t\t<== Thanks For Using Library Management System ==>\n\n");
	}
}
void studentlog()
{
	system("cls");
	int found = 0;
	spt = fopen("studentlog.txt", "rb");
	printf("\t\tEnter Your Username --> ");
	scanf("%s", &sp.user);
	printf("\n\t\tEnter Your Password --> ");
	scanf("%s", &sp.pass);
	printf("\n\t\tThe Username Is %s And The Password Is %s\n", sp.user, sp.pass);
	if (spt == NULL)
	{
		printf("\tFile is empty");
	}
	else
	{
		int u = 0;
		int p = 0;
		int c = 0;
		while (fscanf(spt, "%s", &file) == 1)
		{
			char *fds = strtok(file, ";");
			while (fds != NULL)
			{
				if (c == 0)
				{
					if (strcmp(fds, sp.user) == 0)
					{
						u = 1;
					}
					c++;
				}
				else
				{
					if (strcmp(fds, sp.pass) == 0)
					{
						if (u == 0)
						{
							p = 0;
						}
						else
							p = 1;
					}
					c = 0;
				}
				fds = strtok(NULL, " ");
			}
			if (u == 1 && p == 1)
			{
				found = 1;
				printf("\n\t\t <<== Access Granted ==>>\n");
				studentportal();
				break;
			}
		}
	}
	if (found == 0)
	{
		printf("\n\t\t\t\t\t<== Account Not Found ==> \n\n");
	}
	fclose(spt);
}
// .......................................................................Teacher Portal..........................................
void tearcherportal()
{
	int ch;
	do
	{
		system("cls");
		printf("\n\t\t\t\t\t<== Welcome to library management system For Teacher's '==>\n\n");
		printf("\t1. Add book\n");
		printf("\t2. Remove book\n");
		printf("\t3. Add student \n");
		printf("\t4. Remove Student\n");
		printf("\t5. All book\n");
		printf("\t6. Issu List\n");
		printf("\t7. Search Book \n");
		printf("\t8. Issu Book\n");
		printf("\t9. Student List\n");
		printf("\t10. Search Student \n");
		printf("\t0. Exit\n\n");
		printf("\tEnter your choice --> ");
		scanf("%d", &ch);
		switch (ch)
		{
		case 1:
			addbook();
			break;
		case 2:
			removebook();
			break;
		case 3:
			addstudent();
			break;
		case 4:
			removestudent();
			break;
		case 5:
			showbooks();
			break;
		case 6:
			issubooklist();
			break;
		case 7:
			searchbook();
			break;
		case 8:
			issubook();
			break;
		case 9:
			studentlist();
			break;
		case 10:
			searchstudent();
			break;
		case 0:
			exit(0);
			break;
		default:
			printf("Invalid Choice \n");
		}
		getch();
	} while (ch > 0);
}
// ................................................................Student Portal ..............................................
int studentportal()
{
	int ch;
	do
	{
		system("cls");
		printf("\n\t\t\t\t\t<== Welcome to library management system For Student  ==>\n\n");
		printf("\t1. All book\n");
		printf("\t2. Search Book \n");
		printf("\t3. Issu Book\n");
		printf("\t4. Student List\n");
		printf("\t5. Search Student \n");
		printf("\t0. Exit\n\n");
		printf("\tEnter your choice --> ");
		scanf("%d", &ch);
		switch (ch)
		{
		case 1:
			showbooks();
			break;
		case 2:
			searchbook();
			break;
		case 3:
			issubook();
			break;
		case 4:
			studentlist();
			break;
		case 5:
			searchstudent();
			break;
		case 0:
			exit(0);
			break;
		default:
			printf("Invalid Choice \n");
		}
		getch();
	} while (ch > 0);
	return 0;
}
//...............................................................................Add Book Funtion .................................................................
void addbook()
{
	int num;
	system("cls");
	fp = fopen("book.txt", "a+");
	printf("Enter Book Id : ");
	scanf("%s", &b.id);
	fflush(stdin);
	printf("Enter the book name : ");
	gets(b.name);
	fflush(stdin);
	printf("Enter author name :");
	gets(b.Author_name);
	fflush(stdin);
	printf("Page: ");
	scanf("%s", &b.page_numbers);
	fflush(stdin);
	printf("Price : ");
	gets(b.book_price);
	fflush(stdin);
	if (fp == NULL)
	{
		printf("\t\t\t\t\t\n<== File Not Open ==>\n");
	}
	else
	{
		printf("\t\t\t\t\t\n<==Book added successfully ==>\n");
	}
	fwrite(&b, sizeof(struct book), 1, fp);
	fclose(fp);

	printf("\n <== Do you Want To Add More Books ==> \n PRESS [ 1 ] --> \t");
	scanf("%d", &num);
	if (num == 1)
	{
		addbook();
	}
	else
	{
		printf("\t\t\t\t\t\n<== Thanks For Using Library Management System ==> \n");
	}
}
//...............................................................To remover book ........................................................................
void removebook()
{
	system("cls");
	printf("\t\t\t\t\t\n<== Remove Book ==>\n\n");
	int num;
	FILE *fp, *fp1;
	struct book b;
	fp = fopen("book.txt", "r");
	fp1 = fopen("temp.txt", "w");
	char sr[20];
	int found = 0;
	printf("\tEnter The Book ID --> \t");
	scanf("%s", &sr);
	if (fp == NULL)
	{
		fprintf(stderr, "can't open file\n");
		exit(0);
	}
	while (fread(&b, sizeof(struct book), 1, fp) > 0)
	{
		if (strcmp(sr, b.id) == 0)
		{
			found = 1;
		}
		else
		{
			fwrite(&b, sizeof(struct book), 1, fp1);
		}
	}
	fclose(fp);
	fclose(fp1);
	if (!found)
	{
		printf("\n\t\t\t\tRecord not found\n");
	}
	if (found)
	{
		+remove("book.txt");
		rename("temp.txt", "book.txt");
		printf("\n\t\t\t\tRecord deleted succesfully\n");
	}
	printf("\n <== Do You Want To Remove More Books ==> \n PRESS [ 1 ] --> \t");
	scanf("%d", &num);
	if (num == 1)
	{
		removebook();
	}
	else
	{
		printf("\t\t\t\t\t\n<== Thanks For Using Library Management System ==> \n");
	}
}
//................................................................................Add Student Funtion...............................................................
void addstudent()
{
	int num;
	st = fopen("student.txt", "a+");
	system("cls");
	printf("\n\t\t\t\t\t<== Adding Student ==>\n\n\n");
	printf("\tEnter Id Number : ");
	fflush(stdin);
	gets(s.id);
	printf("\tName of the student : ");
	gets(s.Name);
	fflush(stdin);
	printf("\tEnter the course : ");
	gets(s.course);
	printf("\tEnter the Number : ");
	gets(s.number);
	printf("\tEnter the university_ID : ");
	gets(s.University_id);
	if (st == NULL)
	{
		printf("\n\t\t\t\t\t<== No Record Found ==>\n");
	}
	else
	{
		printf("\n\t\t\t\t\t\t<== Student Added successfully ==>\n\n");
	}
	fwrite(&s, sizeof(struct student), 1, st);
	fclose(st);
	printf("\n\t\t\t\t <== Add More Students ==> \n\t PRESS [ 1 ] --> \t");
	scanf("%d", &num);
	if (num == 1)
	{
		addstudent();
	}
	else
	{
		printf("\n\t\t\t\t\t\t<== Thanks For Using Library Management System ==> \n");
	}
}
//.............................................................................Delete Student ...........................................................................
void removestudent()
{
	int num;
	system("cls");
	FILE *st, *st1;
	system("cls");
	printf("\n\t\t\t\t\t<== Delete Student ==> \n\n");
	st = fopen("student.txt", "r");
	st1 = fopen("temp.txt", "w");
	char sr[30];
	int found = 0;
	printf("\tEnter Student ID --> ");
	scanf("%s", &sr);
	if (st == NULL)
	{
		printf("\n\t\t\t\t\t<== File Is Empty ==>\n\n");
	}
	while (fread(&s, sizeof(struct student), 1, st) > 0)
	{
		if (strcmp(sr, s.id) == 0)
		{
			found = 1;
		}
		else
		{
			fwrite(&s, sizeof(struct student), 1, st1);
		}
	}
	fclose(st);
	fclose(st1);
	if (!found)
	{
		printf("\n\t\t\t\t\t<== Record Not Found ==>\n\n");
	}
	if (found)
	{
		remove("student.txt");
		rename("temp.txt", "student.txt");
		printf("\n\t\t\t\t\t<== Record Delect Successfully ==> \n\n");
	}
	printf("\n\t\t\t\t\t<== Delete More Students ==> \n PRESS [ 1 ] --> \t");
	scanf("%d", &num);
	if (num == 1)
	{
		removestudent();
	}
	else
	{
		printf("\t\t\t\t\n<== Thanks For Using Library Management System ==> \n");
	}
}
//.............................................................................Book List.................................................................
void showbooks()
{
	FILE *fp;
	struct book b;
	system("cls");
	printf("\t\t\t\t\t\t<== Showing all books ==>\n\n");
	printf("\n\t\t\t\t\t\t<== Available Books ==>\n\n\n\n");
	printf("\t\t%-30s %-30s %-30s %-30s\n\n", "Book id", "Book Name", "Author_Name", "Book Price");

	fp = fopen("book.txt", "r");
	if (fp == NULL)
	{
		fprintf(stderr, "\t\t\t\t\t\n<== Unable To Open File ==>\n");
	}
	else
	{
		while (fread(&b, sizeof(struct book), 1, fp) > 0)
		{
			printf("\t\t%-30s %-30s %-30s %-30s\n\n", b.id, b.name, b.Author_name, b.page_numbers, b.book_price);
		}
	}
	printf("\n\n\t\t\t\t\t<== All Books Of Library Are Here ==> \n\n");
	fclose(fp);
}
void issubook()
{
	system("cls");
	printf("\n\t\t\t\t\t\t<== Issu Book ==> \n\n\n");
	struct book b;
	struct student s;
	FILE *ib;
	FILE *fp;
	FILE *st;
	char id[30];
	char ids[30];
	int found1 = 0;
	int found = 0;
	int num;
	printf("\tEnter Book ID --> ");
	scanf("%s", &id);
	fp = fopen("book.txt", "r");
	ib = fopen("issubook.txt", "a+");
	st = fopen("student.txt", "a+");
	if (fp == NULL)
	{
		fprintf(stderr, "\t\t\t\t\t\n<== Unable To Open File ==>\n");
	}
	else
	{
		printf("\n\n\t\t%-30s %-30s %-30s %-30s %-30s\n\n", "Book id", "Book Name", "Author_Name", "Book Page", "Book Price");
		while (fread(&b, sizeof(struct book), 1, fp) > 0)
		{
			if (strcmp(id, b.id) == 0)
			{
				found1 = 1;
				printf("\n\n\t\t%-30s %-30s %-30s %-30s %-30s\n\n", b.id, b.name, b.Author_name, b.page_numbers, b.book_price);
				// fwrite(&b,sizeof(struct book),1,ib);
			}
		}
	}
	printf("\n\t\t\t\t\t\t<== Search Student ==> \n\n\n\n");
	printf("\tEnter Student Id --> ");
	scanf("%s", &ids);
	if (st == NULL)
	{
		printf("\n\t\t\t\t\t<== Unable To Open File ==>\n");
	}
	else
	{
		while (fread(&s, sizeof(struct student), 1, st) > 0)
		{
			if (strcmp(ids, s.id) == 0)
			{
				found = 1;
				printf("\n\n\t\t%-30s %-30s %-30s %-30s %-30s\n\n", s.id, s.Name, s.course, s.University_id, s.number);
				fwrite(&s, sizeof(struct student), 1, ib);
			}
		}
		if (found == 1)
		{
			printf("\n\n\n\t\t\t\t\t<== Student Found ==>\n\n");
		}
	}
	fclose(st);
	fclose(fp);
	fclose(ib);
	printf("\n <== Issu More Books ==> \n PRESS [ 1 ] --> \t");
	scanf("%d", &num);
	if (num == 1)
	{
		issubook();
	}
	else
	{
		printf("\t\t\t\t\t\n<== Thanks For Using Library Management System ==> \n");
	}
}
//...................................................................................Issu Book List .....................................................................
void issubooklist()
{
	system("cls");
	FILE *ib;
	FILE *st;
	FILE *fp;
	struct book b;
	struct student s;
	printf("\t\t\t\t\t\t\n<== Book Issue List ==>\n\n");
	ib = fopen("issubook.txt", "r");
	printf("%-30s %-30s \n\n", "  Options", "Information");
	if (ib == NULL)
	{
		printf("\t\t\t\t\t\n<== Unable To Open File ==>\n\n");
	}
	else
	{
		while (fread(&b, sizeof(struct book), 1, ib) > 0)
			printf("\n<------------------------------------------>\n\n");
		printf(" Book Id --> \t\t%-30s\n", b.id);
		printf(" Book Name -->  \t%-30s\n", b.name);
		printf(" Book Author Name --> \t%-30s\n", b.Author_name);
		printf(" Page Number --> \t%-30s\n", b.page_numbers);
		printf(" Book Price --> \t%-30s \n", b.book_price);
		while (fread(&s, sizeof(struct student), 1, ib) > 0)
		{
			printf(" Student Id --> \t%-30s\n", s.id);
			printf(" Student Name --> \t%-30s\n", s.Name);
			printf(" Student Course --> \t%-30s\n", s.course);
			printf(" Student University ID --> \t%-30s\n", s.University_id);
			printf(" Student Number --> \t%-30s\n\n\n", s.number);
			printf("\n<------------------------------------------>\n\n");
		}
	}
	fclose(ib);
}

void searchbook()
{
	system("cls");
	int num;
	printf("\t\t\t\t\t\t\n<== Welcome To Search Book Secsion ==> \n\n");
	printf("\t1. Search Book From ID \n");
	printf("\t2. Search Book from Name \n");
	printf("\t3. Search Book from Author \n");
	printf("\tEnter Your Choise --> ");
	scanf("%d", &num);
	switch (num)
	{
	case 1:
		searchbookbyid();
		break;
	case 2:
		searchbookbyname();
		break;
	case 3:
		searchbookbyauthor();
		break;
	default:
		printf("\t\t\t\t\t\n <== Sorry Wrong Choice ==>\n\n");
	}
}

void searchbookbyauthor()
{
	int num;
	FILE *fp;
	struct book b;
	char id[30];
	int found = 0;
	system("cls");
	printf("\n\t\t\t\t\t<== Search books ==>\n\n");
	printf("\tEnter Book Author --> ");
	scanf("%s", id);
	printf("\t\t%-30s %-30s %-30s %-30s\n\n", "Book id", "Book Name", "Author_Name", "Book Price");

	fp = fopen("book.txt", "r");
	if (fp == NULL)
	{
		fprintf(stderr, "\t\t\t\t\t\n<== Unable To Open File ==>\n");
	}
	else
	{
		while (fread(&b, sizeof(struct book), 1, fp) > 0)
		{
			if (strcmp(id, b.Author_name) == 0)
			{
				found = 1;
				printf("\t\t%-30s %-30s %-30s %-30s\n\n", b.id, b.name, b.Author_name, b.page_numbers, b.book_price);
			}
		}
		if (found == 1)
		{
			printf("\n\t\t\t\t\t<== Student Found ==>\n\n");
		}
	}
	fclose(fp);
	printf("\n \t\t\t\t\t<== Search More Books ==> \n\t PRESS [ 1 ] --> \t");
	scanf("%d", &num);
	if (num == 1)
	{
		searchbook();
	}
	else
	{
		printf("\t\t\t\t\t\n<== Thanks For Using Library Management System ==> \n");
	}
}
//.....................................................................................Search Book .............................................................

void searchbookbyid()
{
	int num;
	FILE *fp;
	struct book b;
	char id[30];
	int found = 0;
	system("cls");
	printf("\n\t\t\t\t\t<== Search books ==>\n\n");
	printf("\tEnter Book ID --> ");
	scanf("%s", id);
	printf("\t\t%-30s %-30s %-30s %-30s\n\n", "Book id", "Book Name", "Author_Name", "Book Price");

	fp = fopen("book.txt", "r");
	if (fp == NULL)
	{
		fprintf(stderr, "\t\t\t\t\t\n<== Unable To Open File ==>\n");
	}
	else
	{
		while (fread(&b, sizeof(struct book), 1, fp) > 0)
		{
			if (strcmp(id, b.id) == 0)
			{
				found = 1;
				printf("\t\t%-30s %-30s %-30s %-30s\n\n", b.id, b.name, b.Author_name, b.page_numbers, b.book_price);
			}
		}
		if (found == 1)
		{
			printf("\n\t\t\t\t\t<== Student Found ==>\n\n");
		}
	}
	fclose(fp);
	printf("\n \t\t\t\t\t<== Search More Books ==> \n\t PRESS [ 1 ] --> \t");
	scanf("%d", &num);
	if (num == 1)
	{
		searchbook();
	}
	else
	{
		printf("\t\t\t\t\t\n<== Thanks For Using Library Management System ==> \n");
	}
}
// ..................................................Search Book by name .............................................
void searchbookbyname()
{
	int num;
	FILE *fp;
	struct book b;
	char id[30];
	int found = 0;
	system("cls");
	printf("\n\t\t\t\t\t<== Search books ==>\n\n");
	printf("\tEnter Book Name  --> ");
	scanf("%s", id);
	printf("\t\t%-30s %-30s %-30s %-30s\n\n", "Book id", "Book Name", "Author_Name", "Book Price");

	fp = fopen("book.txt", "r");
	if (fp == NULL)
	{
		fprintf(stderr, "\t\t\t\t\t\n<== Unable To Open File ==>\n");
	}
	else
	{
		while (fread(&b, sizeof(struct book), 1, fp) > 0)
		{
			if (strcmp(id, b.name) == 0)
			{
				found = 1;
				printf("\t\t%-30s %-30s %-30s %-30s\n\n", b.id, b.name, b.Author_name, b.page_numbers, b.book_price);
			}
		}
		if (found == 1)
		{
			printf("\n\t\t\t\t\t<== Student Found ==>\n\n");
		}
	}
	fclose(fp);
	printf("\n \t\t\t\t\t<== Search More Books ==> \n\t PRESS [ 1 ] --> \t");
	scanf("%d", &num);
	if (num == 1)
	{
		searchbook();
	}
	else
	{
		printf("\t\t\t\t\t\n<== Thanks For Using Library Management System ==> \n");
	}
}
//.......................................................... Student List ...........................................................................

void studentlist()
{
	system("cls");
	printf("\n\t\t\t\t\t\t\t\t\t<== Student List ==> \n\n\n\n\n");
	printf("\t%-30s %-30s %-30s %-30s %-30s\n\n\n\n", "Student Id", "Student Name", "Student Course", "Student University Id", "Student Number");

	st = fopen("student.txt", "r");
	if (st == NULL)
	{
		printf("\t\t\t\t\t\n<== Unable To Open File ==>\n");
	}
	else
	{
		while (fread(&s, sizeof(struct student), 1, st) > 0)
		{
			printf("\t%-30s %-30s %-30s %-30s %-30s\n\n", s.id, s.Name, s.course, s.University_id, s.number);
		}
	}
	fclose(st);
}

//..........................................................................Search Student ...............................................................................
void searchstudent()
{
	int num;
	FILE *st;
	struct student s;
	char id[30];
	int found = 0;
	system("cls");
	printf("\n\t\t\t\t\t\t<== Search Student ==> \n\n\n\n");
	printf("\t\tEnter Student Id --> ");
	scanf("%s", &id);
	printf("\n\n\t\t%-30s %-30s %-30s %-30s %-30s\n\n\n", "Student ID", "Student Name", "Student course", "Student University_id", "Student number");

	st = fopen("student.txt", "r");
	if (st == NULL)
	{
		printf("\n\t\t\t\t\t<== Unable To Open File ==>\n");
	}
	else
	{
		while (fread(&s, sizeof(struct student), 1, st) > 0)
		{
			if (strcmp(id, s.id) == 0)
			{
				found = 1;
				printf("\n\n\t\t%-30s %-30s %-30s %-30s %-30s\n\n", s.id, s.Name, s.course, s.University_id, s.number);
			}
		}
		if (found == 1)
		{
			printf("\n\n\n\t\t\t\t\t<== Student Found ==>\n\n");
		}
	}
	fclose(st);
	printf("\n\t\t\t\t\t<== Search More Students ==> \n\t PRESS [ 1 ] --> \t");
	scanf("%d", &num);
	if (num == 1)
	{
		searchstudent();
	}
	else
	{
		printf("\n\t\t\t\t\t<== Thanks For Using Library Management System ==> \n");
	}
}
